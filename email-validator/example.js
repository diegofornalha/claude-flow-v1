/**
 * Exemplo pr√°tico de uso do sistema de valida√ß√£o de email
 */

const EmailValidator = require('./validator');

// Criar inst√¢ncia do validador
const validator = new EmailValidator();

console.log('üîç Sistema de Valida√ß√£o de Email - Exemplo Pr√°tico\n');

// Lista de emails para testar
const testEmails = [
  'usuario@gmail.com',           // V√°lido
  'test.email+tag@company.org',  // V√°lido com + e .
  'user@tempmail.org',           // Inv√°lido - descart√°vel
  'invalid..email@domain.com',   // Inv√°lido - formato
  '@invalid.com',                // Inv√°lido - sem local part
  'user@',                       // Inv√°lido - sem dom√≠nio
  'muito' + 'a'.repeat(250) + '@example.com', // Inv√°lido - muito longo
  'USER@EXAMPLE.COM',            // V√°lido - case insensitive
  'user@sub.domain.co.uk'        // V√°lido - subdom√≠nio
];

console.log('üìß Valida√ß√£o Individual:\n');

testEmails.forEach((email, index) => {
  const result = validator.validate(email);
  const status = result.isValid ? '‚úÖ' : '‚ùå';
  const errors = result.errors.length > 0 ? ` (${result.errors.join(', ')})` : '';
  
  console.log(`${index + 1}. ${status} ${email}${errors}`);
});

console.log('\nüìä Estat√≠sticas Gerais:\n');

// Obter estat√≠sticas completas
const stats = validator.getValidationStats(testEmails);

console.log(`Total de emails testados: ${stats.total}`);
console.log(`‚úÖ V√°lidos: ${stats.valid} (${(stats.valid/stats.total*100).toFixed(1)}%)`);
console.log(`‚ùå Inv√°lidos: ${stats.invalid} (${(stats.invalid/stats.total*100).toFixed(1)}%)`);

if (stats.disposable > 0) {
  console.log(`üóëÔ∏è  Emails descart√°veis detectados: ${stats.disposable}`);
}

if (stats.formatErrors > 0) {
  console.log(`üìù Erros de formato: ${stats.formatErrors}`);
}

if (stats.lengthErrors > 0) {
  console.log(`üìè Erros de comprimento: ${stats.lengthErrors}`);
}

console.log('\nüî¨ Teste de M√©todos Espec√≠ficos:\n');

// Testar m√©todos espec√≠ficos
console.log('Valida√ß√£o de formato:');
console.log(`- 'user@example.com': ${validator.isValidFormat('user@example.com') ? '‚úÖ' : '‚ùå'}`);
console.log(`- 'invalid..email': ${validator.isValidFormat('invalid..email') ? '‚úÖ' : '‚ùå'}`);

console.log('\nValida√ß√£o de dom√≠nio:');
console.log(`- 'example.com': ${validator.isValidDomain('example.com') ? '‚úÖ' : '‚ùå'}`);
console.log(`- '.invalid.com': ${validator.isValidDomain('.invalid.com') ? '‚úÖ' : '‚ùå'}`);

console.log('\nDetec√ß√£o de email descart√°vel:');
console.log(`- 'user@tempmail.org': ${validator.isDisposableEmail('user@tempmail.org') ? 'üóëÔ∏è' : '‚úÖ'}`);
console.log(`- 'user@gmail.com': ${validator.isDisposableEmail('user@gmail.com') ? 'üóëÔ∏è' : '‚úÖ'}`);

console.log('\nüéØ Exemplo de Integra√ß√£o com Formul√°rio:\n');

// Simular valida√ß√£o de formul√°rio
function validateForm(email) {
  console.log(`Validando email: "${email}"`);
  
  const result = validator.validate(email);
  
  if (result.isValid) {
    console.log('‚úÖ Email v√°lido! Pode prosseguir.');
    return true;
  } else {
    console.log('‚ùå Erro na valida√ß√£o:');
    result.errors.forEach(error => {
      console.log(`   ‚Ä¢ ${error}`);
    });
    return false;
  }
}

// Testar formul√°rio
console.log('--- Simula√ß√£o de Formul√°rio ---');
validateForm('user@example.com');
console.log('');
validateForm('invalid@tempmail.org');

console.log('\n‚ú® Demonstra√ß√£o conclu√≠da!');
console.log('Para usar em seu projeto: const EmailValidator = require("./validator");');